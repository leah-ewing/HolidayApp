name: Deploy HolidayHub to Lightsail

on:
  push:
    branches:
      - production

env:
    SSH_COMMAND: ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.LIGHTSAIL_IP_ADDRESS }}
    APP_DIRECTORY: /home/ubuntu/HolidayHub/

jobs:
    deploy:
        runs-on: ubuntu-latest
    
        steps:
            - name: Checkout code
              uses: actions/checkout@v2
    
            - name: Set up SSH
              uses: webfactory/ssh-agent@v0.5.3
              with:
                ssh-private-key: ${{ secrets.LIGHTSAIL_SSH_KEY }}

            - name: Copy production branch to Lightsail
              run: |
                $SSH_COMMAND 'rm -rf /home/ubuntu/lightsail_temp/*'
                $SSH_COMMAND "git clone --single-branch --branch production ${{ secrets.REPOSITORY_NAME }} /home/ubuntu/lightsail_temp"

            - name: Source secrets
              run: |
                $SSH_COMMAND 'cd $APP_DIRECTORY'
                $SSH_COMMAND 'source .env.production'
                $SSH_COMMAND 'sudo chmod 600 .env.production'

            - name: Stop current service
              run: |
                $SSH_COMMAND 'cd $APP_DIRECTORY'
                $SSH_COMMAND 'if sudo systemctl is-active --quiet app.service; then
                  sudo systemctl stop app.service
                fi'

            - name: Remove files for replacement
              run: |
                $SSH_COMMAND 'cd $APP_DIRECTORY'
                $SSH_COMMAND "find . -mindepth 1 ! -name 'encryption.py' ! -name '.env.production' ! -path './env*' ! -path './encryption*' ! -print0 | xargs -0 rm -rf" ## copy all these files manually onto the lightsail instance from local machine

            - name: Replace project files
              run: $SSH_COMMAND 'cp -r /home/ubuntu/lightsail_temp/* $APP_DIRECTORY'

            - name: Clear temp directory
              run: $SSH_COMMAND 'rm -rf /home/ubuntu/lightsail_temp/*'

            - name: Set file permissions
              run: $SSH_COMMAND 'chown -R ubuntu:ubuntu $APP_DIRECTORY'

            - name: Activate virtual environment
              run: |
                $SSH_COMMAND 'cd $APP_DIRECTORY'
                $SSH_COMMAND 'source env/bin/activate'

            - name: Install dependencies
              run: |
                $SSH_COMMAND 'cd $APP_DIRECTORY'
                $SSH_COMMAND 'pip3 install -r requirements.txt'

            - name: Create and initialize log files
              run: |
                $SSH_COMMAND 'cd $APP_DIRECTORY'
                $SSH_COMMAND 'touch errors/error_log.json && echo "[]" > errors/error_log.json'
                $SSH_COMMAND 'touch jobs/jobs_log.json && echo "[]" > jobs/jobs_log.json'

            - name: Seed database
              run: |
                $SSH_COMMAND 'cd $APP_DIRECTORY'
                $SSH_COMMAND 'python3 database/seed_database.py'

            - name: Restart cron jobs
              run: |
                $SSH_COMMAND 'cd $APP_DIRECTORY'
                $SSH_COMMAND 'python3 jobs/run_jobs.py'

            - name: Restart the service
              run: |
                $SSH_COMMAND 'cd $APP_DIRECTORY'
                $SSH_COMMAND 'deactivate'
                $SSH_COMMAND 'sudo systemctl daemon-reload'
                $SSH_COMMAND 'sudo systemctl start app.service'