name: HolidayHub

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
        DEV_KEY: ${{ secrets.DEV_KEY }}
        SENDER_EMAIL: ${{ secrets.SENDER_EMAIL }}
        EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
        API_KEY: ${{ secrets.API_KEY }}
        DEVELOPER: ${{ secrets.DEVELOPER }}
        DOMAIN: ${{ secrets.DOMAIN }}
        EMAIL_PREFIX: ${{ secrets.EMAIL_PREFIX }}
        API_URI: ${{ secrets.API_URI }}
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        OPENAI_API_URI: ${{ secrets.OPENAI_API_URI }}
        ENCRYPTION_DIRECTORY: ${{ secrets.ENCRYPTION_DIRECTORY }}
        ENCRYPTION_PATH: ${{ secrets.ENCRYPTION_PATH }}
        ENCRYPTION_DEV_KEY: ${{ secrets.ENCRYPTION_DEV_KEY }}
        ENCRYPTION_DICT_PATH: ${{ secrets.ENCRYPTION_DICT_PATH }}
        ENCRYPTION_CIPHER_KEY: ${{ secrets.ENCRYPTION_CIPHER_KEY }}
        VALID_ENCRYPTION_KEYS_PATH: ${{ secrets.VALID_ENCRYPTION_KEYS_PATH }}
        DB_NAME: ${{ secrets.DB_NAME }}
        DEV_DB_URI: ${{ secrets.DEV_DB_URI }}
        TEST_DB_URI: ${{ secrets.TEST_DB_URI }}
        LOGO_URL: ${{ secrets.LOGO_URL }}
        TEST_USER_PASSWORD: ${{ secrets.TEST_USER_PASSWORD }}
        
    steps:
      - name: Install Nginx
        run: sudo apt-get install nginx

      - name: List directory contents
        run: ls -l config

      - name: Configure Nginx
        run: |
          sudo cp config/nginx.conf /etc/nginx/nginx.conf
          sudo systemctl restart nginx

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3'

      - name: Install dependencies
        run: |
          pip3 install -r requirements.txt

      - name: Create encryption files
        run: |
          mkdir $ENCRYPTION_DIRECTORY
          touch $ENCRYPTION_PATH
          touch $VALID_ENCRYPTION_KEYS_PATH
          touch $ENCRYPTION_DICT_PATH

      - name: Import encryption code
        run: |
          echo "$ENCRYPTION_SCRIPT" > $ENCRYPTION_PATH
          echo "$VALID_ENCRYPTION_KEYS" > $VALID_ENCRYPTION_KEYS_PATH
          echo "$ENCRYPTION_DICTIONARY" > $ENCRYPTION_DICT_PATH


      - name: Generate Docker Compose file and create database
        run: |
          sed -i "s/\$DB_NAME/${DB_NAME}/g" config/docker-compose.yml
          sleep 10 

      - name: Seed database
        run: |
          python3 database/seed_database.py
          python3 database/seed_holidays.py
          python3 database/run_migrations.py
          
      - name: Start jobs
        run: |
          python3 jobs/run_jobs.py

      - name: Start Flask app using Gunicorn
        run: |
          gunicorn -b 0.0.0.0:8000 server:app