name: HolidayHub

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      ENCRYPTION_SCRIPT: ${{ secrets.ENCRYPTION_SCRIPT }}
      PRODUCTION_ENV: ${{ secrets.PRODUCTION_ENV }}

    steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3'

      - name: Install dependencies
        run: pip3 install -r requirements.txt

      - name: Create and populate .env file
        run: |
          touch .env && echo -e "$PRODUCTION_ENV" > .env
          source .env

      - name: Debug secrets
        run: |
          echo "DEVELOPER: $DEVELOPER"

      - name: Create and initialize log files
        run: |
          touch errors/error_log.json && echo "[]" > errors/error_log.json
          touch jobs/jobs_log.json && echo "[]" > jobs/jobs_log.json
          
      - name: Create and populate encryption files
        run: |
          mkdir $ENCRYPTION_DIRECTORY
          touch $VALID_ENCRYPTION_KEYS_PATH && echo $VALID_ENCRYPTION_KEYS > $VALID_ENCRYPTION_KEYS_PATH
          touch $ENCRYPTION_DICT_PATH && echo "[$ENCRYPTION_DICTIONARY]" > $ENCRYPTION_DICT_PATH
          touch $ENCRYPTION_PATH && echo -e "$ENCRYPTION_SCRIPT" > $ENCRYPTION_PATH
  
      - name: Setup PostgreSQL service
        run: |
          echo "POSTGRES_USER=leahewing" >> postgres.env
          echo "POSTGRES_PASSWORD=$DB_PASSWORD" >> postgres.env
          docker run --name postgres -d --env-file postgres.env -p 5432:5432 postgres:latest

      - name: Install Nginx
        run: sudo apt-get install nginx

      - name: Configure Nginx
        run: |
          sudo cp config/nginx.conf /etc/nginx/nginx.conf
          sudo systemctl restart nginx

      - name: Seed database
        run: python3 database/seed_database.py
          
      - name: Start jobs
        run: python3 jobs/run_jobs.py

      - name: Start Flask app using Gunicorn
        run: gunicorn -b 0.0.0.0:8000 server:app